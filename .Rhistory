obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
ggsave(file = paste(tableName, 'png', sep = '.')
}
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
ggsave(file = paste(tableName, 'png', sep = '.'))
}
maxCA('M_genreVSage')
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
maxCA('M_genreVSage')
# CA : Genre of a film vs. age of a user
maxCA('M_genreVSage')
maxCA('F_genreVSage')
# CA : Genre of a film vs. occupation of a user
maxCA('M_genreVSoccupation')
maxCA('F_genreVSoccupation')
# CA : Genre of a film vs. region of a user
maxCA('M_genreVSregion')
maxCA('F_genreVSregion')
# CA : Release date of a film vs. age of a user
maxCA('M_releaseVSage')
maxCA('F_releaseVSage')
# CA : Release date of a film vs. occupation of a user
maxCA('M_releaseVSoccupation')
maxCA('F_releaseVSoccupation')
# CA : Release date of a film vs. region of a user
maxCA('M_releaseVSregion')
maxCA('F_releaseVSregion')
install.packages("FField", type = "source")
install.packages("gridExtra")
library('FField)
library('FField')
FFieldPtRepDemo()
library('FField')
FFieldPtRepDemo()
FFieldPtRepDemo()
FFieldPtRepDemo()
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
# CA : Genre of a film vs. age of a user
maxCA('M_genreVSage')
maxCA('F_genreVSage')
# CA : Genre of a film vs. occupation of a user
maxCA('M_genreVSoccupation')
maxCA('F_genreVSoccupation')
# CA : Genre of a film vs. region of a user
maxCA('M_genreVSregion')
maxCA('F_genreVSregion')
# CA : Release date of a film vs. age of a user
maxCA('M_releaseVSage')
maxCA('F_releaseVSage')
# CA : Release date of a film vs. occupation of a user
maxCA('M_releaseVSoccupation')
maxCA('F_releaseVSoccupation')
# CA : Release date of a film vs. region of a user
maxCA('M_releaseVSregion')
maxCA('F_releaseVSregion')
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
p = ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
direct.label(p,"first.polygons")
#ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
maxCA('M_genreVSage')
install.packages(lars)
install.packages('lars')
install.packages('reshape2')
install.packages("reshape2")
library('lars')
library('reshape2')
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
p = ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
direct.label(p,"first.polygons")
#ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
maxCA('M_genreVSage')
install.packages(c("ggplot2","ElemStatLearn","mlmRev"))
install.packages("directlabels", repos="http://r-forge.r-project.org")
install.packages(c("ggplot2", "ElemStatLearn", "mlmRev"))
library('directlabels')
library('directlabels')
install.packages("directlabels", repos="http://r-forge.r-project.org")
library('directlabels')
library(directlabels)
library('directlabels')
library(directlabels)
install.packages('directlabels')
library(directlabels)
library('directlabels')
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
p = ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
direct.label(p,"first.polygons")
#ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
maxCA('M_genreVSage')
library('FactoMineR')
library('ggplot2')
library('directlabels')
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
p = ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
direct.label(p,"first.polygons")
#ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
maxCA('M_genreVSage')
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
p = ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
direct.label(p, first.qp)
#ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
maxCA('M_genreVSage')
?direct.label
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
p = ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
direct.label(p, first.qp)
#ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
maxCA('M_genreVSage')
?geom_dl
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
p = ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_dl(aes(label = rownames(obs2))) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
direct.label(p, first.qp)
#ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
maxCA('M_genreVSage')
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
p = ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_dl(aes(label = rownames(obs2)), method="top.qp") +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
direct.label(p, first.qp)
#ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
maxCA('M_genreVSage')
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
p = ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_dl(aes(label = rownames(obs2)), method="top.qp") +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
#ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
maxCA('M_genreVSage')
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_dl(aes(label = rownames(obs2)), method="top.qp") +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
#ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
maxCA('M_genreVSage')
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_dl(data = obs2, aes(label = rownames(obs2)), method="top.qp") +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
#ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
maxCA('M_genreVSage')
maxCA = function(tableName) {
# Open the file
pathToFile = paste('data', tableName, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(tableName)
ggsave(file = paste('rapport/images', paste(tableName, 'png', sep = '.'), sep = '/'))
}
# CA : Genre of a film vs. age of a user
maxCA('M_genreVSage')
maxCA('F_genreVSage')
# CA : Genre of a film vs. occupation of a user
maxCA('M_genreVSoccupation')
maxCA('F_genreVSoccupation')
# CA : Genre of a film vs. region of a user
maxCA('M_genreVSregion')
maxCA('F_genreVSregion')
# CA : Release date of a film vs. age of a user
maxCA('M_releaseVSage')
maxCA('F_releaseVSage')
# CA : Release date of a film vs. occupation of a user
maxCA('M_releaseVSoccupation')
maxCA('F_releaseVSoccupation')
# CA : Release date of a film vs. region of a user
maxCA('M_releaseVSregion')
maxCA('F_releaseVSregion')
maxCA('F_genreVSage')
# CA : Genre of a film vs. age of a user
maxCA('M_genreVSage')
maxCA('F_genreVSage')
# CA : Genre of a film vs. occupation of a user
maxCA('M_genreVSoccupation')
maxCA('F_genreVSoccupation')
# CA : Genre of a film vs. region of a user
maxCA('M_genreVSregion')
maxCA('F_genreVSregion')
# CA : Release date of a film vs. age of a user
maxCA('M_releaseVSage')
maxCA('F_releaseVSage')
# CA : Release date of a film vs. occupation of a user
maxCA('M_releaseVSoccupation')
maxCA('F_releaseVSoccupation')
# CA : Release date of a film vs. region of a user
maxCA('M_releaseVSregion')
maxCA('F_releaseVSregion')
# MCA on all the data
data = read.csv('data/categorized', head = TRUE)
# Only keep the relevant data
data = data[,c('gender', 'occupation', 'ageCategory', 'releaseDecade', 'region', 'genre')]
# Randomly sample the data (an MCA is a heavy calculation)
###data = data[sample(nrow(data), 2000),]
# Extract each category with the siez of its space
categories = apply(data, 2, function(x) nlevels(as.factor(x)))
# Compute the MCA
mca = MCA(data, graph = FALSE)
# Extract variables coordinates
variables = data.frame(mca$var$coord, Variable = rep(names(categories), categories))
# Extract observations coordinates
observations = data.frame(mca$ind$coord)
# Plot!
ggplot(observations,  aes(Dim.1, Dim.2)) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
geom_point(colour = 'gray50', alpha = 0.7) +
geom_density2d(colour = 'gray80') +
geom_text(data = variables, aes(Dim.1, Dim.2, label = rownames(variables), colour = Variable)) +
ggtitle("MCA plot")
#ggsave(file = "plots/mca.pdf")
