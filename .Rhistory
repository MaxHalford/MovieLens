geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'green') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
# CA : Genre of a film vs. age of a user
maxCA('genreVSage')
maxCA = function(file) {
# Open the file
pathToFile = paste('data', file, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
# CA : Genre of a film vs. age of a user
maxCA('genreVSage')
library('FactoMineR')
library('ggplot2')
maxCA = function(file) {
# Open the file
pathToFile = paste('data', file, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
maxCA('genreVSage')
maxCA = function(file) {
# Open the file
pathToFile = paste('data', file, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
maxCA('male/genreVSage')
library('FactoMineR')
library('ggplot2')
maxCA = function(file) {
# Open the file
pathToFile = paste('data', file, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
maxCA('male/genreVSage')
maxCA = function(file) {
# Open the file
pathToFile = paste('data', file, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple') +
geom_point(data = obs1, aes(Dim.1, Dim.2)) +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
maxCA('male/genreVSage')
maxCA = function(file) {
# Open the file
pathToFile = paste('data', file, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple') +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple', size = 3) +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen') +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen', size = 3) +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
maxCA('male/genreVSage')
maxCA = function(file) {
# Open the file
pathToFile = paste('data', file, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple', size = 3) +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen', size = 3) +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
maxCA('male/genreVSage')
maxCA = function(file) {
# Open the file
pathToFile = paste('data', file, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 3, vjust = 3) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple', size = 3) +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 3, vjust = 3) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen', size = 3) +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
maxCA('male/genreVSage')
maxCA = function(file) {
# Open the file
pathToFile = paste('data', file, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 1, vjust = 1) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple', size = 3) +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 1, vjust = 1) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen', size = 3) +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
maxCA('male/genreVSage')
maxCA = function(file) {
# Open the file
pathToFile = paste('data', file, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 1, vjust = 1) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple', size = 3, shape = 17) +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 1, vjust = 1) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen', size = 3, shape = 19) +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
maxCA('male/genreVSage')
maxCA = function(file) {
# Open the file
pathToFile = paste('data', file, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 1, vjust = 1) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple', size = 2, shape = 17) +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 1, vjust = 1) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen', size = 2, shape = 19) +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
# CA : Genre of a film vs. age of a user
maxCA('male/genreVSage')
maxCA = function(file) {
# Open the file
pathToFile = paste('data', file, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple', size = 2, shape = 17) +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen', size = 2, shape = 19) +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
# CA : Genre of a film vs. age of a user
maxCA('male/genreVSage')
maxCA = function(file) {
# Open the file
pathToFile = paste('data', file, sep = '/')
data = read.csv(pathToFile, head = TRUE)
# Take the first column as the index
rownames(data) = data[,1]
data[,1] = NULL
# Calculate the CA
cA = CA(data, graph = FALSE)
# Extract the cartesian coordinates of the CA for both variables
obs1 = data.frame(cA$col$coord)
obs2 = data.frame(cA$row$coord)
# Plot the two first columns (contains most information)
ggplot() +
geom_text(data = obs1, aes(Dim.1, Dim.2), label = rownames(obs1), col = 'purple', hjust = 0, vjust = 0) +
geom_point(data = obs1, aes(Dim.1, Dim.2), col = 'purple') +
geom_text(data = obs2, aes(Dim.1, Dim.2), label = rownames(obs2), col = 'darkgreen', hjust = 0, vjust = 0) +
geom_point(data = obs2, aes(Dim.1, Dim.2), col = 'darkgreen') +
geom_hline(yintercept = 0, col = 'gray') +
geom_vline(xintercept = 0, col = 'gray') +
ggtitle(file)
}
# CA : Genre of a film vs. age of a user
maxCA('male/genreVSage')
data = read.csv('data/categorized', head = TRUE)
View(data)
data = data[,c(8, 9, 12, 13, 15)]
data = data[sample(nrow(dataMCA), 10000),]
data = data[sample(nrow(data), 10000),]
head(data)
data = data[,c('gender', 'occupation', 'ageCategory', 'releaseDecade', 'region')]
data = data[sample(nrow(data), 10000),]
categories = apply(data, 2, function(x) nlevels(as.factor(x)))
categories
library('FactoMineR')
library('ggplot2')
# MCA on all the data
data = read.csv('data/categorized', head = TRUE)
# Only keep the relevant data
data = data[,c('gender', 'occupation', 'ageCategory', 'releaseDecade', 'region')]
# Randomly sample the data (an MCA is a heavy calculation)
data = data[sample(nrow(data), 10000),]
# Extract each category with the siez of its space
categories = apply(data, 2, function(x) nlevels(as.factor(x)))
# Compute the MCA
mca = MCA(data, graph = FALSE)
# Extract variables coordinates
variables = data.frame(mca$var$coord, Variable = rep(names(categories), categories))
# Extract observations coordinates
observations = data.frame(mca$ind$coord)
# Plot!
ggplot(variables,  aes(Dim.1, Dim.2, label = rownames(variables))) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
geom_text(aes(colour = Variable)) +
ggtitle("MCA plot")
ggplot(variables,  aes(Dim.1, Dim.2, label = rownames(variables))) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
geom_text(aes(colour = Variable)) +
geom_point(aes(Dim.1, Dim.2)) +
ggtitle("MCA plot")
ggplot(variables,  aes(Dim.1, Dim.2, label = rownames(variables))) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
geom_text(aes(colour = Variable), hjust = 0, vjust = 0) +
geom_point(aes(Dim.1, Dim.2), colour = Variable) +
ggtitle("MCA plot")
ggplot(variables,  aes(Dim.1, Dim.2, label = rownames(variables))) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
geom_text(aes(colour = Variable), hjust = 0, vjust = 0) +
geom_point(aes(Dim.1, Dim.2, colour = Variable)) +
ggtitle("MCA plot")
ggplot(observations,  aes(Dim.1, Dim.2, label = rownames(variables))) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
geom_point(colour = 'gray50', alpha = 0.7) +
geom_density2d(colour = 'gray80') +
geom_text(data = variables, aes(Dim.1, Dim.2, label = rownames(variables), colour = Variable)) +
ggtitle("MCA plot")
ggplot(observations,  aes(Dim.1, Dim.2)) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
geom_point(colour = 'gray50', alpha = 0.7) +
geom_density2d(colour = 'gray80') +
geom_text(data = variables, aes(Dim.1, Dim.2, label = rownames(variables), colour = Variable)) +
ggtitle("MCA plot")
data = read.csv('data/categorized', head = TRUE)
# Only keep the relevant data
data = data[,c('gender', 'occupation', 'ageCategory', 'releaseDecade', 'region')]
# Randomly sample the data (an MCA is a heavy calculation)
data = data[sample(nrow(data), 1000),]
# Extract each category with the siez of its space
categories = apply(data, 2, function(x) nlevels(as.factor(x)))
# Compute the MCA
mca = MCA(data, graph = FALSE)
# Extract variables coordinates
variables = data.frame(mca$var$coord, Variable = rep(names(categories), categories))
# Extract observations coordinates
observations = data.frame(mca$ind$coord)
# Plot!
ggplot(observations,  aes(Dim.1, Dim.2)) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
geom_point(colour = 'gray50', alpha = 0.7) +
geom_density2d(colour = 'gray80') +
geom_text(data = variables, aes(Dim.1, Dim.2, label = rownames(variables), colour = Variable)) +
ggtitle("MCA plot")
ggplot(observations,  aes(Dim.1, Dim.2)) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
#geom_point(colour = 'gray50', alpha = 0.7) +
#geom_density2d(colour = 'gray80') +
geom_text(data = variables, aes(Dim.1, Dim.2, label = rownames(variables), colour = Variable)) +
ggtitle("MCA plot")
data = read.csv('data/categorized', head = TRUE)
# Only keep the relevant data
data = data[,c('gender', 'occupation', 'ageCategory', 'releaseDecade', 'region')]
# Randomly sample the data (an MCA is a heavy calculation)
data = data[sample(nrow(data), 30000),]
# Extract each category with the siez of its space
categories = apply(data, 2, function(x) nlevels(as.factor(x)))
# Compute the MCA
mca = MCA(data, graph = FALSE)
# Extract variables coordinates
variables = data.frame(mca$var$coord, Variable = rep(names(categories), categories))
# Extract observations coordinates
observations = data.frame(mca$ind$coord)
# Plot!
ggplot(observations,  aes(Dim.1, Dim.2)) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
#geom_point(colour = 'gray50', alpha = 0.7) +
#geom_density2d(colour = 'gray80') +
geom_text(data = variables, aes(Dim.1, Dim.2, label = rownames(variables), colour = Variable)) +
ggtitle("MCA plot")
ggplot(observations,  aes(Dim.1, Dim.2)) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
geom_point(colour = 'gray50', alpha = 0.7) +
geom_density2d(colour = 'gray80') +
geom_text(data = variables, aes(Dim.1, Dim.2, label = rownames(variables), colour = Variable)) +
ggtitle("MCA plot")
# MCA on all the data
data = read.csv('data/categorized', head = TRUE)
# Only keep the relevant data
data = data[,c('gender', 'occupation', 'ageCategory', 'releaseDecade', 'region')]
# Randomly sample the data (an MCA is a heavy calculation)
data = data[sample(nrow(data), 500),]
# Extract each category with the siez of its space
categories = apply(data, 2, function(x) nlevels(as.factor(x)))
# Compute the MCA
mca = MCA(data, graph = FALSE)
# Extract variables coordinates
variables = data.frame(mca$var$coord, Variable = rep(names(categories), categories))
# Extract observations coordinates
observations = data.frame(mca$ind$coord)
# Plot!
ggplot(observations,  aes(Dim.1, Dim.2)) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
geom_point(colour = 'gray50', alpha = 0.7) +
geom_density2d(colour = 'gray80') +
geom_text(data = variables, aes(Dim.1, Dim.2, label = rownames(variables), colour = Variable)) +
ggtitle("MCA plot")
library('FactoMineR')
library('ggplot2')
# MCA on all the data
data = read.csv('data/categorized', head = TRUE)
# Only keep the relevant data
data = data[,c('gender', 'occupation', 'ageCategory', 'releaseDecade', 'region')]
# Randomly sample the data (an MCA is a heavy calculation)
data = data[sample(nrow(data), 500),]
# Extract each category with the siez of its space
categories = apply(data, 2, function(x) nlevels(as.factor(x)))
# Compute the MCA
mca = MCA(data, graph = FALSE)
# Extract variables coordinates
variables = data.frame(mca$var$coord, Variable = rep(names(categories), categories))
# Extract observations coordinates
observations = data.frame(mca$ind$coord)
# Plot!
ggplot(observations,  aes(Dim.1, Dim.2)) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
geom_point(colour = 'gray50', alpha = 0.7) +
geom_density2d(colour = 'gray80') +
geom_text(data = variables, aes(Dim.1, Dim.2, label = rownames(variables), colour = Variable)) +
ggtitle("MCA plot")
data = data[sample(nrow(data), 2000),]
# Extract each category with the siez of its space
categories = apply(data, 2, function(x) nlevels(as.factor(x)))
# Compute the MCA
mca = MCA(data, graph = FALSE)
# Extract variables coordinates
variables = data.frame(mca$var$coord, Variable = rep(names(categories), categories))
# Extract observations coordinates
observations = data.frame(mca$ind$coord)
# Plot!
ggplot(observations,  aes(Dim.1, Dim.2)) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
geom_point(colour = 'gray50', alpha = 0.7) +
geom_density2d(colour = 'gray80') +
geom_text(data = variables, aes(Dim.1, Dim.2, label = rownames(variables), colour = Variable)) +
ggtitle("MCA plot")
# MCA on all the data
data = read.csv('data/categorized', head = TRUE)
# Only keep the relevant data
data = data[,c('gender', 'occupation', 'ageCategory', 'releaseDecade', 'region')]
# Randomly sample the data (an MCA is a heavy calculation)
###data = data[sample(nrow(data), 2000),]
# Extract each category with the siez of its space
categories = apply(data, 2, function(x) nlevels(as.factor(x)))
# Compute the MCA
mca = MCA(data, graph = FALSE)
# Extract variables coordinates
variables = data.frame(mca$var$coord, Variable = rep(names(categories), categories))
# Extract observations coordinates
observations = data.frame(mca$ind$coord)
# Plot!
ggplot(observations,  aes(Dim.1, Dim.2)) +
geom_hline(yintercept = 0, colour = "gray") +
geom_vline(xintercept = 0, colour = "gray") +
geom_point(colour = 'gray50', alpha = 0.7) +
geom_density2d(colour = 'gray80') +
geom_text(data = variables, aes(Dim.1, Dim.2, label = rownames(variables), colour = Variable)) +
ggtitle("MCA plot")
ggsave(file = "plots/mca.pdf")
